{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\n// 選択したユーザー情報を特定し，　モーダルを表示する．\nexport const useSelectUser = () => {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  //idからユーザーの情報を返す関数\n  const onSelectUser = useCallback(props => {\n    const {\n      id,\n      users,\n      onOpen\n    } = props;\n    const targetUser = users.find(user => user.id === id) || null;\n    setSelectedUser(targetUser);\n  }, []);\n  return {\n    onSelectUser,\n    selectedUser\n  };\n};\n_s(useSelectUser, \"N7980JuoVyljfW4lNW8X58gnZic=\");","map":{"version":3,"names":["useCallback","useState","useSelectUser","_s","selectedUser","setSelectedUser","onSelectUser","props","id","users","onOpen","targetUser","find","user"],"sources":["/Users/sendateppei/Desktop/ChatGPT使って学ぶ/react-user_management/src/hocks/useSelectUser.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { User } from \"../types/api/user\";\n\ntype Props = {\n  id: number;\n  users: Array<User>;\n  onOpen: () => void;\n};\n\n// 選択したユーザー情報を特定し，　モーダルを表示する．\nexport const useSelectUser = () => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  //idからユーザーの情報を返す関数\n  const onSelectUser = useCallback((props: Props) => {\n    const { id, users, onOpen } = props;\n    const targetUser = users.find((user) => user.id === id) || null;\n    setSelectedUser(targetUser);\n  }, []);\n  return { onSelectUser, selectedUser };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAS7C;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAc,IAAI,CAAC;;EAEnE;EACA,MAAMK,YAAY,GAAGN,WAAW,CAAEO,KAAY,IAAK;IACjD,MAAM;MAAEC,EAAE;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGH,KAAK;IACnC,MAAMI,UAAU,GAAGF,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC,IAAI,IAAI;IAC/DH,eAAe,CAACM,UAAU,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEL,YAAY;IAAEF;EAAa,CAAC;AACvC,CAAC;AAACD,EAAA,CAVWD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}