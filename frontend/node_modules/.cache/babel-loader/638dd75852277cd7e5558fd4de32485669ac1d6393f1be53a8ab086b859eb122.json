{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\nexport const useMessage = () => {\n  _s();\n  const toast = useToast();\n  const showMessage = useCallback(props => {\n    const {\n      title,\n      status\n    } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, [toast]);\n  return showMessage;\n};\n_s(useMessage, \"QoVYPldFF9bZOyBdfy4Twj+R7jk=\", false, function () {\n  return [useToast];\n});","map":{"version":3,"names":["useToast","useCallback","useMessage","_s","toast","showMessage","props","title","status","position","duration","isClosable"],"sources":["/Users/sendateppei/Desktop/ChatGPT使って学ぶ/react-user_management/src/hocks/useMassage.ts"],"sourcesContent":["import { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n  const showMessage = useCallback(\n    (props: Props) => {\n      const { title, status } = props;\n      toast({\n        title,\n        status,\n        position: \"top\",\n        duration: 2000,\n        isClosable: true,\n      });\n    },\n    [toast]\n  );\n  return showMessage;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,OAAO;AAOnC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,MAAMK,WAAW,GAAGJ,WAAW,CAC5BK,KAAY,IAAK;IAChB,MAAM;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGF,KAAK;IAC/BF,KAAK,CAAC;MACJG,KAAK;MACLC,MAAM;MACNC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC,EACD,CAACP,KAAK,CACR,CAAC;EACD,OAAOC,WAAW;AACpB,CAAC;AAACF,EAAA,CAhBWD,UAAU;EAAA,QACPF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}