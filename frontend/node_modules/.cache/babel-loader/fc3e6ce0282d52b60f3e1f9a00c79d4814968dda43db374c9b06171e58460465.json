{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMassage\";\nexport const useAuth = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const login = useCallback(id => {\n    setLoading(true);\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(res => {\n      if (res.data) {\n        showMessage({\n          title: \"ログインしました\",\n          status: \"success\"\n        });\n        navigate(\"/home\");\n      } else {\n        alert(\"ユーザーが見つかりません\");\n      }\n    }).catch(() => alert(\"ログインできません\")).finally(() => setLoading(false));\n  }, []);\n  return {\n    login,\n    loading\n  };\n};\n_s(useAuth, \"yq3Ree6hqUg2jh7kgotm4lttLLA=\", false, function () {\n  return [useNavigate, useMessage];\n});","map":{"version":3,"names":["useCallback","useState","axios","useNavigate","useMessage","useAuth","_s","navigate","showMessage","loading","setLoading","login","id","get","then","res","data","title","status","alert","catch","finally"],"sources":["/Users/sendateppei/Desktop/ChatGPT使って学ぶ/react-user_management/src/hocks/useAuth.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMassage\";\n\nexport const useAuth = () => {\n  const navigate = useNavigate();\n  const { showMessage } = useMessage();\n\n  const [loading, setLoading] = useState(false);\n\n  const login = useCallback((id: string) => {\n    setLoading(true);\n    axios\n      .get<User>(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then((res) => {\n        if (res.data) {\n          showMessage({ title: \"ログインしました\", status: \"success\" });\n          navigate(\"/home\");\n        } else {\n          alert(\"ユーザーが見つかりません\");\n        }\n      })\n      .catch(() => alert(\"ログインできません\"))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return { login, loading };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK;EAAY,CAAC,GAAGJ,UAAU,CAAC,CAAC;EAEpC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,KAAK,GAAGX,WAAW,CAAEY,EAAU,IAAK;IACxCF,UAAU,CAAC,IAAI,CAAC;IAChBR,KAAK,CACFW,GAAG,CAAQ,8CAA6CD,EAAG,EAAC,CAAC,CAC7DE,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,EAAE;QACZR,WAAW,CAAC;UAAES,KAAK,EAAE,UAAU;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;QACrDX,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM;QACLY,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMD,KAAK,CAAC,WAAW,CAAC,CAAC,CAC/BE,OAAO,CAAC,MAAMX,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEC,KAAK;IAAEF;EAAQ,CAAC;AAC3B,CAAC;AAACH,EAAA,CAvBWD,OAAO;EAAA,QACDF,WAAW,EACJC,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}