{"ast":null,"code":"var _jsxFileName = \"/Users/sendateppei/Desktop/ChatGPT\\u4F7F\\u3063\\u3066\\u5B66\\u3075\\u3099/react-user_management/src/components/pages/UserManagement.tsx\",\n  _s = $RefreshSig$();\nimport { Center, Spinner, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { memo, useEffect } from \"react\";\nimport { UserCard } from \"../organisms/user/userCard\";\nimport { useAllUsers } from \"../../hocks/useAllUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserManagement = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const {\n    getUsers,\n    users,\n    loading\n  } = useAllUsers();\n  useEffect(() => getUsers(), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrap, {\n      p: {\n        base: 4,\n        md: 10\n      },\n      children: users.map(user => {\n        /*#__PURE__*/_jsxDEV(WrapItem, {\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            imageUrl: \"https://source.unsplash.com/random\",\n            userName: user.username,\n            fullName: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"56dcAxMg+mGqIHaesLEsYebyhnE=\", false, function () {\n  return [useAllUsers];\n})), \"56dcAxMg+mGqIHaesLEsYebyhnE=\", false, function () {\n  return [useAllUsers];\n});\n_c2 = UserManagement;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserManagement$memo\");\n$RefreshReg$(_c2, \"UserManagement\");","map":{"version":3,"names":["Center","Spinner","Wrap","WrapItem","memo","useEffect","UserCard","useAllUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","_c","getUsers","users","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","p","base","md","map","user","imageUrl","userName","username","fullName","name","id","_c2","$RefreshReg$"],"sources":["/Users/sendateppei/Desktop/ChatGPT使って学ぶ/react-user_management/src/components/pages/UserManagement.tsx"],"sourcesContent":["import { Center, Spinner, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { memo, useEffect, VFC } from \"react\";\n\nimport { UserCard } from \"../organisms/user/userCard\";\nimport { useAllUsers } from \"../../hocks/useAllUsers\";\n\nexport const UserManagement: VFC = memo(() => {\n  const { getUsers, users, loading } = useAllUsers();\n\n  useEffect(() => getUsers(), []);\n\n  return (\n    <>\n      {loading ? (\n        <Center>\n          <Spinner />\n        </Center>\n      ) : (\n        <Wrap p={{ base: 4, md: 10 }}>\n          {users.map((user) => {\n            <WrapItem key={user.id}>\n              <UserCard\n                imageUrl=\"https://source.unsplash.com/random\"\n                userName={user.username}\n                fullName={user.name}\n              />\n            </WrapItem>;\n          })}\n        </Wrap>\n      )}\n    </>\n  );\n});\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAClE,SAASC,IAAI,EAAEC,SAAS,QAAa,OAAO;AAE5C,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,OAAO,MAAMC,cAAmB,gBAAAC,EAAA,eAAGT,IAAI,CAAAU,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC5C,MAAM;IAAEE,QAAQ;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGV,WAAW,CAAC,CAAC;EAElDF,SAAS,CAAC,MAAMU,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;EAE/B,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACGD,OAAO,gBACNR,OAAA,CAACT,MAAM;MAAAkB,QAAA,eACLT,OAAA,CAACR,OAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAETb,OAAA,CAACP,IAAI;MAACqB,CAAC,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAG,CAAE;MAAAP,QAAA,EAC1BF,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAK;QACnB,aAAAlB,OAAA,CAACN,QAAQ;UAAAe,QAAA,eACPT,OAAA,CAACH,QAAQ;YACPsB,QAAQ,EAAC,oCAAoC;YAC7CC,QAAQ,EAAEF,IAAI,CAACG,QAAS;YACxBC,QAAQ,EAAEJ,IAAI,CAACK;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC,GALWK,IAAI,CAACM,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CAAC;MACb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACP,gBACD,CAAC;AAEP,CAAC;EAAA,QAzBsCf,WAAW;AAAA,EAyBjD,CAAC;EAAA,QAzBqCA,WAAW;AAAA,EAyBhD;AAAC2B,GAAA,GA1BUtB,cAAmB;AAAA,IAAAE,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}